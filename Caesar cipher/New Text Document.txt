INCLUDE Irvine32.inc
.data
	instr1 dword 100 dup(?), 0
	a dword ?
	b dword ?
	m dword ?
	r dword ?
.code
main PROC
	call readint 
	mov a,eax
	call readint 
	mov b,eax
	mov eax,a
	mov ebx,b
	mul ebx
	mov ebx,eax
	;mov eax,ebx
	;call writedec
	mov ecx,ebx
	mov esi,offset instr1
	
	
	l1:
	call readint
	mov [esi],eax
	add esi,4
	loop l1


	mov ecx,ebx
	mov esi ,offset instr1
	l2:
	push ecx
	mov edx,[esi]
	mov edi,offset instr1
	mov ecx,ebx
	l3:
	cmp edx,[edi]
	jg great
	mov r,edx
	great:
	add edi,4
	loop l3
	
	mov eax,r
	call writedec
	mov al,' '
	call writechar
	pop ecx
	add ecx,4
	loop l2
	
	
	exit
main ENDP

END main



INCLUDE Irvine32.inc
.data
	instr1 byte 50 dup(0), 0
	revs byte 50 dup(0), 0
.code
renull proc
	pushad
	mov esi, offset revs
	mov ecx, 50
	iter:
	mov byte ptr[esi], 0
	loop iter
	popad
	ret
renull endp

dis proc
pushad
	mov ecx, 49
	mov esi, offset revs
	l1:
		mov al, [esi+ecx]
		cmp al, 0
		je continue
		call writechar
		continue:
	loop l1 
	mov al,[esi]
	call writechar
	popad
	ret
dis endp
main PROC
	mov edx, offset instr1
	mov ecx, Lengthof instr1
	call readstring
	mov ecx, lengthof instr1
	mov esi, offset instr1
	mov edi, offset revs
	iterate:
	mov al, [esi]
	cmp al, 0
	je break
	cmp al, ' '
	je space
	mov [edi], al
	inc edi
	jmp continue
	space:
	mov edx, offset revs
	call dis
	call writechar
	call renull
	mov edi, offset revs
	continue:
	inc esi
	loop iterate
	break:
	call dis
	call crlf
	exit
main ENDP

END main
